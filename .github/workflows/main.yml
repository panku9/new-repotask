name: Push the Docker image to AWS ECR Repo

on:
  push:
    branches:
      - main

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get commit hash
        id: get-commit-hash
        run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          IMAGE_TAG: ${{ steps.get-commit-hash.outputs.commit-hash }}-${{ steps.get-timestamp.outputs.timestamp }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Get latest task definition revision
        id: get-latest-revision
        run: |
          latest_revision=$(aws ecs describe-task-definition --task-definition arn:aws:ecs:us-east-1:***:task-definition/git-hub-actions | jq -r '.taskDefinition.revision')
          echo "::set-output name=latest-revision::$latest_revision"

      - name: Update ECS service
        run: |
          aws ecs update-service --cluster git-hub-actions --service myservice-1 --force-new-deployment --task-definition arn:aws:ecs:us-east-1:318709527952:task-definition/git-hub-actions:${{ steps.get-latest-revision.outputs.latest-revision }}

